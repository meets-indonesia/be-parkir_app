version: "3.8"

services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=miniokey
      - MINIO_SECRET_KEY=miniosecret
      - MINIO_BUCKET=be-parkir
      - MINIO_USE_SSL=false
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=parking_user
      - DB_PASSWORD=parking_pass
      - DB_NAME=parking_app
      - DB_SSLMODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - JWT_SECRET=vvmfHfZ68t-pgW-7izB8o5qfWV3_yvBKE9LQXMSIreI
      - JWT_ACCESS_EXPIRY=12h
      - JWT_REFRESH_EXPIRY=7d
      - API_KEY=be-parkir-api-key-2025
      - API_KEY_REQUIRED=true
      - CORS_ALLOW_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:8080,https://parkir.palembang.go.id
      - SERVER_PORT=8080
      - SERVER_ENVIRONMENT=development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - parking-network

  minio:
    image: minio/minio:RELEASE.2025-01-20T14-49-07Z
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=miniokey
      - MINIO_ROOT_PASSWORD=miniosecret
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - parking-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=parking_app
      - POSTGRES_USER=parking_user
      - POSTGRES_PASSWORD=parking_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U parking_user -d parking_app"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - parking-network

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6378:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - parking-network

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  parking-network:
    driver: bridge
